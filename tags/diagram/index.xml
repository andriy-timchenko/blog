<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>diagram on Andriy Timchenko Blog</title>
    <link>https://blog.timchenko.pp.ua/tags/diagram/</link>
    <description>Recent content in diagram on Andriy Timchenko Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright Â© 2022, Andriy; All rights reserved.</copyright>
    <lastBuildDate>Sat, 20 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.timchenko.pp.ua/tags/diagram/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo v0.93.0 - Mermaid Diagrams</title>
      <link>https://blog.timchenko.pp.ua/post/diagram-support/</link>
      <pubDate>Sat, 20 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.timchenko.pp.ua/post/diagram-support/</guid>
      <description>Hugo currently does not provide default templates for Mermaid diagrams. But you can easily add your own. One way to do it would be to create
layouts/_default/_markup/render-codeblock-mermaid.html:
1&amp;lt;div class=&amp;#34;mermaid&amp;#34;&amp;gt; 2 {{- .Inner | safeHTML }} 3&amp;lt;/div&amp;gt; 4{{ .Page.Store.Set &amp;#34;hasMermaid&amp;#34; true }} And then include this snippet at the bottom of the content template (below .Content):
1{{ if .Page.Store.Get &amp;#34;hasMermaid&amp;#34; }} 2 &amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; 3 &amp;lt;script&amp;gt; 4 mermaid.initialize({ startOnLoad: true }); 5 &amp;lt;/script&amp;gt; 6{{ end }} With that you can use the mermaid language in Markdown code blocks:</description>
    </item>
    
  </channel>
</rss>
